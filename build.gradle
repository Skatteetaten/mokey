buildscript {
  ext.repos = {
    maven {
      url "http://aurora/nexus/content/groups/public"
    }
    mavenCentral()
    jcenter()
    mavenLocal()

    maven {
      url "https://repo.spring.io/libs-milestone"
    }
  }


  repositories repos

  dependencies {
    classpath(
        'no.skatteetaten.aurora.gradle.plugins:aurora-gradle-plugin:1.2.1',
        'org.springframework.cloud:spring-cloud-contract-gradle-plugin:2.0.0.RELEASE'
    )
  }
}

plugins {
  id "org.jetbrains.kotlin.jvm" version "1.2.71"
  id "org.jetbrains.kotlin.plugin.spring" version "1.2.71"
  id 'org.springframework.boot' version '2.0.6.RELEASE'
  id 'org.jlleitschuh.gradle.ktlint' version '4.0.0'
}

ext.aurora = [
    requireStaging: false,
    applySpockSupport: false
]

apply plugin: 'io.spring.dependency-management'
apply plugin: 'no.skatteetaten.plugins.aurora'
apply plugin: 'spring-cloud-contract'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

repositories repos

[jar, distZip]*.enabled = true
[bootJar, distTar, bootDistTar, bootDistZip]*.enabled = false
configurations.archives.artifacts.removeIf { !it.archiveTask.enabled }

group = 'no.skatteetaten.aurora'

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:2.0.0.RELEASE"
  }
}

def junitJupiterVersion = dependencyManagement.importedProperties['junit-jupiter.version']
dependencies {

  compile(
      "org.jetbrains.kotlin:kotlin-reflect:1.2.71",
      'org.jetbrains.kotlin:kotlin-stdlib-jdk8',
      'com.fasterxml.jackson.module:jackson-module-kotlin',
      'com.fasterxml.jackson.datatype:jackson-datatype-jsr310',
      "no.skatteetaten.aurora.springboot:aurora-spring-boot2-starter:1.2.2",
      'io.fabric8:openshift-client:4.0.4',
      'com.fkorotkov:kubernetes-dsl:1.0.1',
      "org.springframework.retry:spring-retry",
      'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.30.0',
      'org.springframework.boot:spring-boot-starter-security',
      "org.springframework.boot:spring-boot-starter-hateoas"
  )

  [
      'org.spockframework:spock-core:1.2-groovy-2.4',
      'org.spockframework:spock-spring:1.2-groovy-2.4',
      'org.springframework.restdocs:spring-restdocs-mockmvc',
      'org.springframework.security:spring-security-test',
      'org.junit.jupiter:junit-jupiter-api',
      "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}",
      "org.junit.vintage:junit-vintage-engine:${junitJupiterVersion}",
      'org.springframework.boot:spring-boot-starter-test',
      'io.fabric8:openshift-server-mock:3.1.8',
      'io.mockk:mockk:1.7.10',
      'com.willowtreeapps.assertk:assertk:0.9'
  ].each { testCompile(it) { exclude group: 'junit' } }

  testCompile('org.springframework.cloud:spring-cloud-starter-contract-verifier') {
    exclude group: 'org.codehaus.groovy'
  }

  testImplementation("org.junit.jupiter:junit-jupiter-api")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

springBoot {
  buildInfo()
}

compileKotlin {
  kotlinOptions {
    suppressWarnings = true
    jvmTarget = 1.8
  }
}

compileTestKotlin {
  kotlinOptions {
    suppressWarnings = true
    jvmTarget = 1.8
  }
}

test {
  useJUnitPlatform()
}

kotlin {
  experimental {
    coroutines "enable"
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.6'
}

contracts {
  packageWithBaseClasses = 'no.skatteetaten.aurora.mokey.contracts'
  targetFramework = 'Spock'
}

ktlint {
  version = "0.23.1"
}
