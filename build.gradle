buildscript {
  ext.repos = {
    mavenCentral()
    jcenter()
    mavenLocal()
  }


  repositories repos

  dependencies {
    classpath(
        'no.skatteetaten.aurora.gradle.plugins:aurora-gradle-plugin:1.2.1',
    )
  }
}

plugins {
  id "org.jetbrains.kotlin.jvm" version "1.2.30"
  id "org.jetbrains.kotlin.plugin.spring" version "1.2.30"
  id 'org.springframework.boot' version '2.0.0.RELEASE'
}

ext.aurora = [
    requireStaging: false,
    applySpockSupport: false
]

apply plugin: 'io.spring.dependency-management'
apply plugin: 'no.skatteetaten.plugins.aurora'

repositories repos

[jar, distZip]*.enabled = true
[bootJar, distTar, bootDistTar, bootDistZip]*.enabled = false
configurations.archives.artifacts.removeIf { !it.archiveTask.enabled }

group = 'no.skatteetaten.aurora'

dependencies {

  compile(
      "org.jetbrains.kotlin:kotlin-reflect:1.2.30",
      'org.jetbrains.kotlin:kotlin-stdlib-jdk8',
      'com.fasterxml.jackson.module:jackson-module-kotlin',
      "no.skatteetaten.aurora.springboot:aurora-spring-boot2-starter:1.0.0",
      'io.fabric8:openshift-client:3.1.8',
      'io.fabric8:kubernetes-model:2.0.4',
      "org.springframework.retry:spring-retry",
      'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21.2',
      'org.springframework.boot:spring-boot-starter-security'
  )

  testCompile(
      'org.springframework.restdocs:spring-restdocs-mockmvc',
      'org.springframework.security:spring-security-test',
      'org.junit.jupiter:junit-jupiter-api',
      'io.fabric8:openshift-server-mock:3.1.8',
      'org.springframework.boot:spring-boot-starter-test',
      'io.mockk:mockk:1.7.10'
  )

  testImplementation("org.junit.jupiter:junit-jupiter-api")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

springBoot {
  buildInfo()
}

compileKotlin {
  kotlinOptions {
    suppressWarnings = true
    jvmTarget = 1.8
  }
}

test {
  useJUnitPlatform()
}

kotlin {
  experimental {
    coroutines "enable"
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.6'
}